---
# Source: jobs-chart/charts/rbac/templates/serviceAccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: console-plugin-sa
---
# Source: jobs-chart/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    argocd.argoproj.io/instance: jobs
  name: console-pod-restart-sa
  namespace: default
---
# Source: jobs-chart/charts/rbac/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: console-plugin-clr
rules:
  - apiGroups:
      - "operator.openshift.io"
    resources:
      - "consoles"
    verbs:
      - get
      - list
      - patch
      - update
---
# Source: jobs-chart/charts/rbac/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: console-plugin
subjects:
- kind: ServiceAccount
  name: console-plugin-sa
  namespace: default
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: console-plugin-clr
  apiGroup: rbac.authorization.k8s.io
---
# Source: jobs-chart/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    argocd.argoproj.io/instance: jobs
  name: console-pod-restart-role
  namespace: openshift-console
rules:
  - apiGroups:
      - ''
    resources:
      - pods
    verbs:
      - get
      - list
      - patch
      - update
      - delete
---
# Source: jobs-chart/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    argocd.argoproj.io/instance: jobs
  name: console-pod-restart
  namespace: openshift-console
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: console-pod-restart-role
subjects:
  - apiGroup: ''
    kind: ServiceAccount
    name: console-pod-restart-sa
    namespace: default
---
# Source: jobs-chart/templates/console-plugin.yaml
kind: Job
apiVersion: batch/v1
metadata:
  name: activate-console-plugins
  annotations:
    argocd.argoproj.io/sync-wave: "1"
#namespace: openshift-storage
spec:
  template:
    spec:
      containers:
      ## this image is deployed as part of VP so you can run jobs. cli and tools are 2 images that can be used. 
      ##tools has tcpdump,jq,parted,strace utilities
      - name: cli
        image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest 
        command:
        - /bin/bash
        - -ce
        - |
          values=("mce" "acm" "odf-console")

          # Check if each value is already present in the /spec/plugins array
          for value in "${values[@]}"; do
              if ! oc get consoles.operator.openshift.io cluster -o jsonpath='{.spec.plugins[*]}' | grep -q "\<$value\>"; then
                  # Value not present, so execute the oc patch command to add it
                  echo "Adding $value to /spec/plugins"
                  oc patch consoles.operator.openshift.io cluster --type json -p "[{\"op\": \"add\", \"path\": \"/spec/plugins/-\", \"value\": \"$value\"}]"
              else
                  echo "$value is already present in /spec/plugins"
              fi
          done  
        
      dnsPolicy: ClusterFirst
      restartPolicy: Never
      serviceAccount: console-plugin-sa
      serviceAccountName: console-plugin-sa
      terminationGracePeriodSeconds: 400
---
# Source: jobs-chart/templates/console-pod-restart.yaml
kind: Job
apiVersion: batch/v1
metadata:
  name: restart-console
  annotations:
    argocd.argoproj.io/hook: "PostSync"
  # namespace: openshift-console
spec:
  template:
    spec:
      containers:
      ## this image is deployed as part of VP so you can run jobs. cli and tools are 2 images that can be used. 
      ##tools has tcpdump,jq,parted,strace utilities
      - name: cli
        image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest 
        command:
        - /bin/bash
        - -ce
        - |
          oc delete pod -n openshift-console -l component=ui
      dnsPolicy: ClusterFirst
      restartPolicy: Never
      serviceAccount: console-pod-restart-sa
      serviceAccountName: console-pod-restart-sa
      terminationGracePeriodSeconds: 400
